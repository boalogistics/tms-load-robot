import csv
import tms_login as tms
from selenium.webdriver.common.by import By 
from selenium.webdriver.support.ui import Select, WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

url = 'https://boa.3plsystemscloud.com/'
browser = tms.login(url)

f = open('pod_list.csv', 'a')

# put FOR loop here to loop through list of load numbers
loadlist = ['150487',
'150936',
'155833',
'149397',
'149496',
'151057',
'154969',
'151550',
'154631',
'150509',
'157887',
'150345',
'150680',
'150763',
'151391',
'155158',
'154837',
'154916',
'154769',
'155831',
'154596',
'154598',
'154445',
'150864',
'150608',
'150213',
'150470',
'149919',
'157878',
'156317',
'156555',
'156557',
'155885',
'155063',
'158042',
'158047',
'158049',
'156214',
'155915',
'148851',
'151037',
'151308',
'154605',
'154636',
'151480',
'152850',
'155168',
'155851',
'154781',
'151531',
'150453',
'149770',
'150049',
'150356',
'156063',
'156564',
'150232',
'150195',
'149435',
'149898',
'150928',
'151165',
'151063',
'151557',
'154360',
'154623',
'155105',
'150532',
'158885',
'151164',
'151127',
'150224',
'154756',
'154615',
'150346',
'150146',
'151054',
'150652',
'149426',
'154359',
'151616',
'155793',
'149976',
'150349',
'151081',
'156076',
'151596',
'154641',
'157824',
'154786',
'151043',
'151062',
'150244',
'155836',
'154485',
'155115',
'156574',
'154457',
'152867',
'151519',
'158887',
'154484',
'158000',
'156501',
'151551',
'154747',
'155930',
'156412',
'151182',
'154483',
'155001',
'151068',
'156414',
'151067',
'150556',
'156484',
'156500',
'156016',
'158886',
'157601',
'154965',
'154459',
'152342',
'158788',
'156017',
'151562',
'150681',
'150682',
'158030',
'154653',
'150421',
'150147',
'151009',
'155866',
'151082',
'149954',
'151241',
'150548',
'155083',
'155830',
'151319',
'155886',
'156166',
'152853',
'151014',
'154632',
'154358',
'154622',
'149956',
'150360',
'151003',
'154363',
'151484',
'151486',
'150762',
'149915',
'151487',
'151451',
'150649',
'150027',
'149958',
'151000',
'151507',
'154477',
'151490',
'151503',
'155843',
'151509',
'151048',
'156310',
'150646',
'154914',
'150494',
'154683',
'155894',
'155855',
'151545',
'154621',
'154481',
'151059',
'149897',
'150363',
'150481',
'150029',
'154478',
'154362',
'154971',
'155846',
'154913',
'149778',
'151511',
'151051',
'156309',
'156139',
'150605',
'154595',
'156468',
'151136',
'149978',
'151606',
'155094',
'154661',
'150655',
'155987',
'150445',
'150447',
'151061',
'151534',
'154610',
'154680',
'149942',
'154964',
'151579',
'151604',
'149427',
'149979',
'151091',
'150657',
'151614',
'156246',
'154735',
'151007',
'150043',
'154775',
'154793',
'155108',
'150361',
'150665',
'155996',
'150560',
'151607',
'154737',
'150557',
'151005',
'151099',
'150042',
'156222',
'149690',
'154774',
'150663',
'155106',
'155990',
'150347',
'150357',
'150353',
'156271',
'151325',
'152864',
'149574',
'151053',
'155723',
'154795',
'150413',
'149946',
'155890',
'154640',
'154884',
'151543',
'154620',
'154357',
'155819',
'150354',
'151133',
'154455',
'154637',
'155897',
'155931',
'154361',
'154875',
'154658',
'154985',
'150641',
'150362',
'150423',
'149874',
'150359',
'150355',
'150358',
'149365',
'154975',
'150352',
'150558',
'149875',
'154979',
'155841',
'151530',
'150660',
'151046',
'151564',
'154929',
'154987',
'154608',
'150451',
'151042',
'149933',
'155899',
'154635',
'154684',
'154355',
'149969',
'151144',
'150433',
'150350',
'155090',
'151598',
'149423',
'151147',
'150541',
'154650',
'154606',
'150448',
'154986',
'151039',
'149929',
'155996',
'150560',
'152857',
'151607',
'154737',
'150557',
'156567',
'150431',
'156463',
'156475',
'151005',
'151099',
'150042',
'156222',
'158878',
'149690',
'154774',
'150663',
'155106',
'155990',
'156565',
'150347',
'150932',
'150357',
'150353',
'156271',
'158951',
'151324',
'151325',
'152864',
'149574',
'151053',
'156686',
'156155',
'155723',
'154795',
'150413',
'149946',
'154768',
'156159',
'155890',
'158955',
'158946',
'156390',
'154640',
'154884',
'151543',
'154620',
'154357',
'155819',
'157943',
'150354',
'151133',
'154773',
'154455',
'154637',
'158960',
'156536',
'155897',
'156117',
'155931',
'156269',
'158934',
'158067',
'157825',
'154361',
'154875',
'154658',
'154985',
'150641',
'150362',
'150423',
'149874',
'150359',
'150355',
'150358',
'149365',
'154975',
'150352',
'150558',
'151320',
'149875',
'154979',
'155841',
'151530',
'157967',
'150998',
'150660',
'151046',
'151564',
'154929',
'154987',
'156370',
'154608',
'150451',
'151042',
'155848',
'149933',
'157998',
'158959',
'155899',
'156162',
'154635',
'154684',
'154355',
'149969',
'151144',
'156183',
'156540',
'150433',
'150350',
'155090',
'156410',
'151598',
'149423',
'151147',
'150541',
'154650',
'158062',
'155884',
'154606',
'150999',
'150448',
'156347',
'154986',
'151039',
'155847',
'157992',
'149929',
'150929'
]

for x in loadlist:
    try:
        load_id = x
        url = 'https://boa.3plsystemscloud.com/App_BW/staff/shipment/shipmentDetail.aspx?loadid='+load_id
        browser.get(url)

        try:
            WebDriverWait(browser, timeout=2).until(EC.element_to_be_clickable((By.ID, 'ctl00_BodyContent_divStoredDocs')))

            doc_table = browser.find_element_by_id('ctl00_BodyContent_divStoredDocs')

            doc_links = doc_table.find_elements_by_tag_name('a')
            if any(link.text == 'POD' for link in doc_links):
                print(load_id + ' has POD uploaded.')
                f.write(load_id + ' has POD uploaded.\n')
            else:
                print(load_id + ' has no POD uploaded.')
                f.write(load_id + ' has no POD uploaded.\n')
        except:
            print(load_id + ' has no documents uploaded.')
            f.write(load_id + ' has no documents uploaded.\n')
        
        # with open('pricing.csv', mode='a+') as pricing:
        #     price_writer = csv.writer(pricing, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
        #     price_writer.writerow([load_id, cost, billed, margin_usd, margin_pct])
    except Exception as e:
        print(load_id + ' threw ' + repr(e))
        # with open('pricing.csv', mode='a+') as pricing:
        #     price_writer = csv.writer(pricing, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
        #     price_writer.writerow([load_id, cost, billed, margin_usd, margin_pct])
          
browser.quit()
f.close()
